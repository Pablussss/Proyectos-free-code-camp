{"ast":null,"code":"export const noteReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === '@notes/created') {\n    return [...state, action.payload];\n  }\n\n  if (action.type === '@notes/toggle_important') {\n    const {\n      id\n    } = action.payload;\n    return state.map(note => {\n      if (note.id === id) {\n        return { ...note,\n          important: !note.important\n        };\n      }\n\n      return note;\n    });\n  }\n\n  return state;\n};\nexport const createNote = content => {\n  return {\n    type: '@notes/created',\n    payload: {\n      content,\n      important: false,\n      id: generateId()\n    }\n  };\n};\nexport const toggleImportanceOf = id => {\n  return {\n    type: '@notes/toggle_important',\n    payload: {\n      id\n    }\n  };\n};","map":{"version":3,"sources":["/Users/pablooo/Documents/GitHub/visualstudio/react-to-do/src/reducers/noteReducer.js"],"names":["noteReducer","state","action","type","payload","id","map","note","important","createNote","content","generateId","toggleImportanceOf"],"mappings":"AAAA,OAAO,MAAMA,WAAW,GAAG,YAAwB;AAAA,MAAvBC,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AAC/C,MAAIA,MAAM,CAACC,IAAP,KAAgB,gBAApB,EAAqC;AACnC,WAAO,CAAC,GAAGF,KAAJ,EAAWC,MAAM,CAACE,OAAlB,CAAP;AACD;;AAED,MAAGF,MAAM,CAACC,IAAP,KAAgB,yBAAnB,EAA8C;AAC1C,UAAM;AAACE,MAAAA;AAAD,QAAOH,MAAM,CAACE,OAApB;AACA,WAAOH,KAAK,CAACK,GAAN,CAAWC,IAAI,IAAI;AACtB,UAAGA,IAAI,CAACF,EAAL,KAAYA,EAAf,EAAmB;AACf,eAAO,EACH,GAAGE,IADA;AAEHC,UAAAA,SAAS,EAAE,CAACD,IAAI,CAACC;AAFd,SAAP;AAIH;;AACD,aAAOD,IAAP;AACH,KARM,CAAP;AASH;;AAED,SAAON,KAAP;AAED,CApBI;AAuBP,OAAO,MAAMQ,UAAU,GAAGC,OAAO,IAAI;AACjC,SAAO;AACLP,IAAAA,IAAI,EAAE,gBADD;AAEHC,IAAAA,OAAO,EAAC;AACNM,MAAAA,OADM;AAENF,MAAAA,SAAS,EAAE,KAFL;AAGNH,MAAAA,EAAE,EAAEM,UAAU;AAHR;AAFL,GAAP;AAQD,CATI;AAWL,OAAO,MAAMC,kBAAkB,GAAGP,EAAE,IAAG;AACrC,SAAM;AACFF,IAAAA,IAAI,EAAE,yBADJ;AAEFC,IAAAA,OAAO,EAAE;AACPC,MAAAA;AADO;AAFP,GAAN;AAMD,CAPM","sourcesContent":["export const noteReducer = (state = [], action) => { \n    if (action.type === '@notes/created'){\n      return [...state, action.payload];\n    }\n    \n    if(action.type === '@notes/toggle_important') {\n        const {id} = action.payload\n        return state.map (note => {\n            if(note.id === id) {\n                return {\n                    ...note,\n                    important: !note.important\n                }\n            }\n            return note;\n        })\n    }\n\n    return state;\n  \n  }\n\n\nexport const createNote = content => {\n    return {\n      type: '@notes/created',\n        payload:{\n          content,\n          important: false,\n          id: generateId()\n        }\n    }\n  }\n  \n  export const toggleImportanceOf = id =>{\n    return{\n        type: '@notes/toggle_important',\n        payload: {\n          id\n        }\n    }\n  } "]},"metadata":{},"sourceType":"module"}