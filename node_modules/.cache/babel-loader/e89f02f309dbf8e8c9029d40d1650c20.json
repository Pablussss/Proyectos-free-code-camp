{"ast":null,"code":"var _jsxFileName = \"/Users/pablooo/Documents/GitHub/visualstudio/react-to-do/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { createNote, toggleImportanceOf } from './reducers/noteReducer';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const state = useSelector(state => state);\n  const dispatch = useDispatch();\n\n  const addNote = event => {\n    event.preventDefault();\n    const {\n      target\n    } = event;\n    const content = target.note.value;\n    target.note.value = '';\n    dispatch(createNote(content));\n  };\n\n  const toggleImportant = id => {\n    dispatch(toggleImportanceOf(id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addNote,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: state.map(note => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => toggleImportant(note.id),\n          children: [note.content, /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: note.important ? 'important' : 'not important'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this)]\n        }, note.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 7\n  }, this);\n};\n\n_s(App, \"lAwOUIsiQt7W5pDkNmeY6/8xQ4s=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/pablooo/Documents/GitHub/visualstudio/react-to-do/src/App.js"],"names":["createNote","toggleImportanceOf","useDispatch","useSelector","App","state","dispatch","addNote","event","preventDefault","target","content","note","value","toggleImportant","id","map","important"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,kBAArB,QAA+C,wBAA/C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACd,QAAMC,KAAK,GAAGF,WAAW,CAACE,KAAK,IAAIA,KAAV,CAAzB;AACA,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;;AACA,QAAMK,OAAO,GAAIC,KAAD,IAAW;AACzBA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAM;AAACC,MAAAA;AAAD,QAAWF,KAAjB;AACA,UAAMG,OAAO,GAAGD,MAAM,CAACE,IAAP,CAAYC,KAA5B;AACAH,IAAAA,MAAM,CAACE,IAAP,CAAYC,KAAZ,GAAoB,EAApB;AACAP,IAAAA,QAAQ,CAACN,UAAU,CAACW,OAAD,CAAX,CAAR;AACD,GAND;;AAQA,QAAMG,eAAe,GAAIC,EAAD,IAAQ;AAC9BT,IAAAA,QAAQ,CAACL,kBAAkB,CAACc,EAAD,CAAnB,CAAR;AACD,GAFD;;AAIA,sBACE;AAAA,4BACE;AAAM,MAAA,QAAQ,EAAER,OAAhB;AAAA,8BACE;AAAO,QAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKA;AAAA,gBAEEF,KAAK,CAACW,GAAN,CAAUJ,IAAI,IAAI;AAChB,4BAAO;AAAkB,UAAA,OAAO,EAAE,MAAME,eAAe,CAACF,IAAI,CAACG,EAAN,CAAhD;AAAA,qBACJH,IAAI,CAACD,OADD,eAEL;AAAA,sBAEEC,IAAI,CAACK,SAAL,GACI,WADJ,GAEI;AAJN;AAAA;AAAA;AAAA;AAAA,kBAFK;AAAA,WAASL,IAAI,CAACG,EAAd;AAAA;AAAA;AAAA;AAAA,gBAAP;AAWC,OAZH;AAFF;AAAA;AAAA;AAAA;AAAA,YALA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD,CAxCH;;GAAMX,G;UACYD,W,EACGD,W;;;KAFfE,G;AA0CN,eAAeA,GAAf","sourcesContent":["import { createNote, toggleImportanceOf } from './reducers/noteReducer';\nimport { useDispatch, useSelector } from 'react-redux'\n\nconst App = () => {\n    const state = useSelector(state => state)\n    const dispatch = useDispatch()\n    const addNote = (event) => {\n      event.preventDefault()\n      const {target} = event\n      const content = target.note.value\n      target.note.value = ''\n      dispatch(createNote(content))\n    }\n  \n    const toggleImportant = (id) => {\n      dispatch(toggleImportanceOf(id))\n    }\n  \n    return(\n      <div>\n        <form onSubmit={addNote}>\n          <input name=\"note\" />\n          <button>Add</button>\n        </form>\n      <ul>\n        {\n        state.map(note => {\n          return <li key={note.id} onClick={() => toggleImportant(note.id)}>\n            {note.content}\n            <strong>\n              {\n              note.important \n                ? 'important' \n                : 'not important'\n  \n              }\n            </strong>\n          </li>\n          })\n        }\n      </ul>\n      </div>\n    )\n  }\n\nexport default App;"]},"metadata":{},"sourceType":"module"}