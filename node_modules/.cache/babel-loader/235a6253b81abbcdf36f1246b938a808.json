{"ast":null,"code":"var _jsxFileName = \"/Users/pablooo/Documents/GitHub/visualstudio/react-to-do/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst noteReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === '@notes/created') {\n    return state.concat(action.payload);\n  }\n\n  return state;\n};\n\nconst store = createStore(noteReducer);\nstore.dispatch({\n  type: '@notes/created',\n  payload: {\n    content: 'Me encanta programar Redux',\n    important: true,\n    id: 1\n  }\n});\nstore.dispatch({\n  type: '@notes/created',\n  payload: {\n    content: 'pero es aburrido',\n    important: false,\n    id: 2\n  }\n});\n\nconst App = () => {\n  const state = store.getState();\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: state.map(note => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [note.content, /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: note.important ? 'important' : 'not important'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, note.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 16\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_c = App;\n\nconst renderApp = () => {\n  ReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 3\n  }, this), document.getElementById('root'));\n};\n\nrenderApp();\nstore.subscribe(renderApp);\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/pablooo/Documents/GitHub/visualstudio/react-to-do/src/index.js"],"names":["React","ReactDOM","createStore","noteReducer","state","action","type","concat","payload","store","dispatch","content","important","id","App","getState","map","note","renderApp","render","document","getElementById","subscribe"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,WAAT,QAA4B,OAA5B;;;AAGA,MAAMC,WAAW,GAAG,YAAwB;AAAA,MAAvBC,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AAC1C,MAAIA,MAAM,CAACC,IAAP,KAAgB,gBAApB,EAAqC;AACnC,WAAOF,KAAK,CAACG,MAAN,CAAaF,MAAM,CAACG,OAApB,CAAP;AACD;;AAED,SAAOJ,KAAP;AAED,CAPD;;AASA,MAAMK,KAAK,GAAGP,WAAW,CAACC,WAAD,CAAzB;AAEAM,KAAK,CAACC,QAAN,CAAe;AACbJ,EAAAA,IAAI,EAAE,gBADO;AAEbE,EAAAA,OAAO,EAAE;AACPG,IAAAA,OAAO,EAAE,4BADF;AAEPC,IAAAA,SAAS,EAAE,IAFJ;AAGPC,IAAAA,EAAE,EAAE;AAHG;AAFI,CAAf;AASAJ,KAAK,CAACC,QAAN,CAAe;AACbJ,EAAAA,IAAI,EAAE,gBADO;AAEbE,EAAAA,OAAO,EAAE;AACPG,IAAAA,OAAO,EAAE,kBADF;AAEPC,IAAAA,SAAS,EAAE,KAFJ;AAGPC,IAAAA,EAAE,EAAE;AAHG;AAFI,CAAf;;AAUA,MAAMC,GAAG,GAAG,MAAM;AAChB,QAAMV,KAAK,GAAGK,KAAK,CAACM,QAAN,EAAd;AAEA,sBACE;AAAA,cAEEX,KAAK,CAACY,GAAN,CAAUC,IAAI,IAAI;AAChB,0BAAO;AAAA,mBACJA,IAAI,CAACN,OADD,eAEL;AAAA,oBAEEM,IAAI,CAACL,SAAL,GACI,WADJ,GAEI;AAJN;AAAA;AAAA;AAAA;AAAA,gBAFK;AAAA,SAASK,IAAI,CAACJ,EAAd;AAAA;AAAA;AAAA;AAAA,cAAP;AAWC,KAZH;AAFF;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CAtBD;;KAAMC,G;;AAwBN,MAAMI,SAAS,GAAG,MAAM;AAExBjB,EAAAA,QAAQ,CAACkB,MAAT,eACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,UADF,EAEAC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFA;AAIC,CAND;;AAQAH,SAAS;AACTT,KAAK,CAACa,SAAN,CAAgBJ,SAAhB","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux'\n\n\nconst noteReducer = (state = [], action) => { \n  if (action.type === '@notes/created'){\n    return state.concat(action.payload);\n  }\n \n  return state;\n\n}\n\nconst store = createStore(noteReducer);\n\nstore.dispatch({\n  type: '@notes/created',\n  payload: {\n    content: 'Me encanta programar Redux',\n    important: true,\n    id: 1\n  }\n})\n\nstore.dispatch({\n  type: '@notes/created',\n  payload: {\n    content: 'pero es aburrido',\n    important: false,\n    id: 2\n  }\n})\n\n\nconst App = () => {\n  const state = store.getState();\n  \n  return(\n    <ul>\n      {\n      state.map(note => {\n        return <li key={note.id}>\n          {note.content}\n          <strong>\n            {\n            note.important \n              ? 'important' \n              : 'not important'\n\n            }\n          </strong>\n        </li>\n        })\n      }\n    </ul>\n  )\n}\n\nconst renderApp = () => {\n\nReactDOM.render(\n  <App />,\ndocument.getElementById('root')\n);\n}\n\nrenderApp()\nstore.subscribe(renderApp);\n"]},"metadata":{},"sourceType":"module"}