{"ast":null,"code":"var _jsxFileName = \"/Users/pablooo/Documents/GitHub/visualstudio/react-to-do/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport { noteReducer } from './reducers/noteReducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst store = createStore(noteReducer);\n\nconst generateId = () => Math.floor(Math.random() * 9999999) + 1;\n\nconst createNote = content => {\n  return {\n    type: '@notes/created',\n    payload: {\n      content,\n      important: false,\n      id: generateId()\n    }\n  };\n};\n\nconst toggleImportanceOf = id => {\n  return {\n    type: '@notes/toggle_important',\n    payload: {\n      id\n    }\n  };\n};\n\nconst App = () => {\n  const state = store.getState();\n\n  const addNote = event => {\n    event.preventDefault();\n    const {\n      target\n    } = event;\n    const content = target.note.value;\n    target.note.value = '';\n    store.dispatch(createNote(content));\n  };\n\n  const toggleImportant = id => {\n    store.dispatch(toggleImportanceOf(id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addNote,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: state.map(note => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => toggleImportant(note.id),\n          children: [note.content, /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: note.important ? 'important' : 'not important'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 11\n          }, this)]\n        }, note.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 16\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_c = App;\n\nconst renderApp = () => {\n  ReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this), document.getElementById('root'));\n};\n\nrenderApp();\nstore.subscribe(renderApp);\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/pablooo/Documents/GitHub/visualstudio/react-to-do/src/index.js"],"names":["React","ReactDOM","createStore","noteReducer","store","generateId","Math","floor","random","createNote","content","type","payload","important","id","toggleImportanceOf","App","state","getState","addNote","event","preventDefault","target","note","value","dispatch","toggleImportant","map","renderApp","render","document","getElementById","subscribe"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,SAASC,WAAT,QAA4B,wBAA5B;;AAGA,MAAMC,KAAK,GAAGF,WAAW,CAACC,WAAD,CAAzB;;AAEA,MAAME,UAAU,GAAG,MACjBC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,OAA3B,IAAsC,CADxC;;AAGA,MAAMC,UAAU,GAAGC,OAAO,IAAI;AAC5B,SAAO;AACLC,IAAAA,IAAI,EAAE,gBADD;AAEHC,IAAAA,OAAO,EAAC;AACNF,MAAAA,OADM;AAENG,MAAAA,SAAS,EAAE,KAFL;AAGNC,MAAAA,EAAE,EAAET,UAAU;AAHR;AAFL,GAAP;AAQD,CATD;;AAWA,MAAMU,kBAAkB,GAAGD,EAAE,IAAG;AAC9B,SAAM;AACFH,IAAAA,IAAI,EAAE,yBADJ;AAEFC,IAAAA,OAAO,EAAE;AACPE,MAAAA;AADO;AAFP,GAAN;AAMD,CAPD;;AASA,MAAME,GAAG,GAAG,MAAM;AAChB,QAAMC,KAAK,GAAGb,KAAK,CAACc,QAAN,EAAd;;AAEA,QAAMC,OAAO,GAAIC,KAAD,IAAW;AACzBA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAM;AAACC,MAAAA;AAAD,QAAWF,KAAjB;AACA,UAAMV,OAAO,GAAGY,MAAM,CAACC,IAAP,CAAYC,KAA5B;AACAF,IAAAA,MAAM,CAACC,IAAP,CAAYC,KAAZ,GAAoB,EAApB;AACApB,IAAAA,KAAK,CAACqB,QAAN,CAAehB,UAAU,CAACC,OAAD,CAAzB;AACD,GAND;;AAQA,QAAMgB,eAAe,GAAIZ,EAAD,IAAQ;AAC9BV,IAAAA,KAAK,CAACqB,QAAN,CAAeV,kBAAkB,CAACD,EAAD,CAAjC;AACD,GAFD;;AAIA,sBACE;AAAA,4BACE;AAAM,MAAA,QAAQ,EAAEK,OAAhB;AAAA,8BACE;AAAO,QAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKA;AAAA,gBAEEF,KAAK,CAACU,GAAN,CAAUJ,IAAI,IAAI;AAChB,4BAAO;AAAkB,UAAA,OAAO,EAAE,MAAMG,eAAe,CAACH,IAAI,CAACT,EAAN,CAAhD;AAAA,qBACJS,IAAI,CAACb,OADD,eAEL;AAAA,sBAEEa,IAAI,CAACV,SAAL,GACI,WADJ,GAEI;AAJN;AAAA;AAAA;AAAA;AAAA,kBAFK;AAAA,WAASU,IAAI,CAACT,EAAd;AAAA;AAAA;AAAA;AAAA,gBAAP;AAWC,OAZH;AAFF;AAAA;AAAA;AAAA;AAAA,YALA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD,CAxCD;;KAAME,G;;AA0CN,MAAMY,SAAS,GAAG,MAAM;AACtB3B,EAAAA,QAAQ,CAAC4B,MAAT,eACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,UADF,EAEAC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFA;AAID,CALD;;AAOAH,SAAS;AACTxB,KAAK,CAAC4B,SAAN,CAAgBJ,SAAhB","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux'\nimport { noteReducer } from './reducers/noteReducer';\n\n\nconst store = createStore(noteReducer);\n\nconst generateId = () => \n  Math.floor(Math.random() * 9999999) + 1\n\nconst createNote = content => {\n  return {\n    type: '@notes/created',\n      payload:{\n        content,\n        important: false,\n        id: generateId()\n      }\n  }\n}\n\nconst toggleImportanceOf = id =>{\n  return{\n      type: '@notes/toggle_important',\n      payload: {\n        id\n      }\n  }\n} \n\nconst App = () => {\n  const state = store.getState();\n  \n  const addNote = (event) => {\n    event.preventDefault()\n    const {target} = event\n    const content = target.note.value\n    target.note.value = ''\n    store.dispatch(createNote(content))\n  }\n\n  const toggleImportant = (id) => {\n    store.dispatch(toggleImportanceOf(id))\n  }\n\n  return(\n    <div>\n      <form onSubmit={addNote}>\n        <input name=\"note\" />\n        <button>Add</button>\n      </form>\n    <ul>\n      {\n      state.map(note => {\n        return <li key={note.id} onClick={() => toggleImportant(note.id)}>\n          {note.content}\n          <strong>\n            {\n            note.important \n              ? 'important' \n              : 'not important'\n\n            }\n          </strong>\n        </li>\n        })\n      }\n    </ul>\n    </div>\n  )\n}\n\nconst renderApp = () => {\n  ReactDOM.render(\n    <App />,\n  document.getElementById('root')\n  );\n}\n\nrenderApp()\nstore.subscribe(renderApp);\n"]},"metadata":{},"sourceType":"module"}