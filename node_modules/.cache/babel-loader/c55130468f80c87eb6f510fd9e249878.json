{"ast":null,"code":"var _jsxFileName = \"/Users/pablooo/Documents/GitHub/visualstudio/react-to-do/src/components/Notes.js\",\n    _s = $RefreshSig$();\n\nimport { toggleImportanceOf } from '../reducers/noteReducer';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Note(_ref) {\n  let {\n    toggleImportant,\n    note\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    onClick: () => toggleImportant(note.id),\n    children: [note.content, /*#__PURE__*/_jsxDEV(\"strong\", {\n      children: note.important ? 'important' : 'not important'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 11\n    }, this)]\n  }, note.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 13\n  }, this);\n}\n\n_c = Note;\n\nfunction Notes(_ref2) {\n  let {\n    notes,\n    toggleImportant\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: notes.map(note => /*#__PURE__*/_jsxDEV(Note, {\n      note: note,\n      toggleImportant: toggleImportant\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 31\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n\n_c2 = Notes;\nexport default function NotesContainer() {\n  _s();\n\n  const notes = useSelector(state => state.notes);\n  const dispatch = useDispatch();\n\n  const toggleImportant = id => {\n    dispatch(toggleImportanceOf(id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Notes, {\n    notes: notes,\n    toggleImportant: toggleImportant\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 12\n  }, this);\n}\n\n_s(NotesContainer, \"AU0yCPgM6cCSGgZtUJbOCfiwDXo=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c3 = NotesContainer;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Note\");\n$RefreshReg$(_c2, \"Notes\");\n$RefreshReg$(_c3, \"NotesContainer\");","map":{"version":3,"sources":["/Users/pablooo/Documents/GitHub/visualstudio/react-to-do/src/components/Notes.js"],"names":["toggleImportanceOf","useDispatch","useSelector","Note","toggleImportant","note","id","content","important","Notes","notes","map","NotesContainer","state","dispatch"],"mappings":";;;AAAA,SAASA,kBAAT,QAAmC,yBAAnC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;;AAEA,SAASC,IAAT,OAAwC;AAAA,MAAzB;AAACC,IAAAA,eAAD;AAAkBC,IAAAA;AAAlB,GAAyB;AACnC,sBAAO;AAAkB,IAAA,OAAO,EAAE,MAC/BD,eAAe,CAACC,IAAI,CAACC,EAAN,CADX;AAAA,eAEDD,IAAI,CAACE,OAFJ,eAGF;AAAA,gBAEEF,IAAI,CAACG,SAAL,GACI,WADJ,GAEI;AAJN;AAAA;AAAA;AAAA;AAAA,YAHE;AAAA,KAASH,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA,UAAP;AAWA;;KAZIH,I;;AAeT,SAASM,KAAT,QAAyC;AAAA,MAA1B;AAACC,IAAAA,KAAD;AAAQN,IAAAA;AAAR,GAA0B;AACrC,sBACI;AAAA,cAEIM,KAAK,CAACC,GAAN,CAAUN,IAAI,iBAAI,QAAC,IAAD;AAAM,MAAA,IAAI,EAAEA,IAAZ;AAAkB,MAAA,eAAe,EAAED;AAAnC;AAAA;AAAA;AAAA;AAAA,YAAlB;AAFJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;MARQK,K;AAUT,eAAe,SAASG,cAAT,GAA2B;AAAA;;AACtC,QAAMF,KAAK,GAAGR,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACH,KAAhB,CAAzB;AACA,QAAMI,QAAQ,GAAGb,WAAW,EAA5B;;AAEA,QAAMG,eAAe,GAAIE,EAAD,IAAQ;AAC5BQ,IAAAA,QAAQ,CAACd,kBAAkB,CAACM,EAAD,CAAnB,CAAR;AACH,GAFD;;AAIA,sBAAO,QAAC,KAAD;AAAO,IAAA,KAAK,EAAEI,KAAd;AAAqB,IAAA,eAAe,EAAEN;AAAtC;AAAA;AAAA;AAAA;AAAA,UAAP;AAEH;;GAVuBQ,c;UACNV,W,EACGD,W;;;MAFGW,c","sourcesContent":["import { toggleImportanceOf } from '../reducers/noteReducer'\nimport { useDispatch, useSelector } from 'react-redux'\n\nfunction Note ({toggleImportant, note}) {\n     return <li key={note.id} onClick={() => \n        toggleImportant(note.id)}>\n          {note.content}\n          <strong>\n            {\n            note.important \n              ? 'important' \n              : 'not important'\n            }\n          </strong>\n        </li>     \n    }\n\n\nfunction Notes({notes, toggleImportant}) {\n    return (\n        <ul>\n        {\n            notes.map(note => <Note note={note} toggleImportant={toggleImportant}/>)\n        }\n        </ul>\n    )\n}\n\nexport default function NotesContainer () {\n    const notes = useSelector(state => state.notes)\n    const dispatch = useDispatch();\n    \n    const toggleImportant = (id) => {\n        dispatch(toggleImportanceOf(id))\n    }\n\n    return <Notes notes={notes} toggleImportant={toggleImportant} />\n    \n}"]},"metadata":{},"sourceType":"module"}